{"version":3,"sources":["components/AddCategory.js","components/GiphyGridItem.js","helpers/getGifs.js","components/GiphyGrid.js","hooks/useFetchGifs.js","components/GiphyApp.js","index.js"],"names":["AddCategory","setcategory","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cat","type","placeholder","onChange","target","value","defaultProps","GiphyGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","response","json","data","gifs","map","img","id","images","downsized_medium","GiphyGrid","loading","state","setState","useEffect","then","UseFetchGifs","Images","image","GiphyApp","categoryItem","ReactDOM","render","document","getElementById"],"mappings":"yLAGaA,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAa9C,OACE,sBAAMC,SARa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAY,SAACS,GAAD,OAAUP,GAAV,mBAAyBO,OACrCN,EAAc,MAIhB,SACE,uBACEO,KAAK,OACLC,YAAY,eACZC,SAfc,SAACP,GACnBF,EAAcE,EAAEQ,OAAOC,QAenBA,MAAOZ,OAUfH,EAAYgB,aAAe,G,YC9BdC,EAAgB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACrC,OACE,sBAAKC,UAAU,+CAAf,UACE,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNGK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,sEAEJ,mCACTN,EAHa,uDAEJ,mCAFI,uBAG8DO,UAC/EF,IAJiB,SAOIG,MAAMR,GAPV,cAObS,EAPa,gBASIA,EAASC,OATb,uBASXC,EATW,EASXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAfnB,kBAmBZY,GAnBY,2HAAH,sDCYPM,EAAY,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECLf,SAACA,GAAc,IAAD,EACdtB,mBAAS,CACjC4B,KAAM,GACNQ,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACRlB,EAAQC,GAAUkB,MAAK,SAACT,GACtBO,EAAS,CACPV,KAAMG,EACNK,SAAS,SAGZ,CAACd,IAEGe,EDT2BI,CAAanB,GAAjCoB,EAD2B,EACjCd,KAAcQ,EADmB,EACnBA,QACtB,OACE,qCACE,oBAAIlB,UAAU,oCAAd,SAAmDI,IAClDc,GACC,mBAAGlB,UAAU,mCAAb,6BAEF,qBAAKA,UAAU,WAAf,SAEGwB,EAAOZ,KAAI,SAACa,GACX,OAAO,cAAC,EAAD,eAAkCA,GAAdA,EAAMX,aEf9BY,EAAW,WAAO,IAAD,EACI5C,mBAAS,CAAC,cADd,mBACrBsB,EADqB,KACXvB,EADW,KAE5B,OACE,qCACE,0CACA,uBACA,cAAC,EAAD,CAAaA,YAAaA,IAEzBuB,EAASQ,KAAI,SAACe,GACb,OAAO,cAAC,EAAD,CAA8BvB,SAAUuB,GAAxBA,UCR/BC,IAASC,OAAO,cAAC,EAAD,IAAcC,SAASC,eAAe,W","file":"static/js/main.acdc4d58.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setcategory }) => {\r\n  const [inputValue, setinputValue] = useState(\"\");\r\n\r\n  const handleInput = (e) => {\r\n    setinputValue(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setcategory((cat) => [inputValue, ...cat]);\r\n      setinputValue(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type='text'\r\n        placeholder='CategorÃ­a'\r\n        onChange={handleInput}\r\n        value={inputValue}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setcategory: PropTypes.func.isRequired,\r\n};\r\n\r\nAddCategory.defaultProps = {};\r\n","import React from \"react\";\r\n\r\nexport const GiphyGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className='card animate__animated animate__bounceInLeft'>\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","export const getGifs = async (category) => {\r\n  try {\r\n    const ApiKey = \"2ES5pAo98fC0I8jw5KJI2HJzvMt2q5eQ\";\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=${ApiKey}&limit=10&q=${encodeURI(\r\n      category\r\n    )}`;\r\n\r\n    const response = await fetch(url);\r\n\r\n    const { data } = await response.json();\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n    });\r\n\r\n    return gifs;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\n/**\r\n * Components\r\n */\r\nimport { GiphyGridItem } from \"./GiphyGridItem\";\r\n\r\n/**\r\n * Custom Hooks\r\n */\r\nimport { UseFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nexport const GiphyGrid = ({ category }) => {\r\n  const { data: Images, loading } = UseFetchGifs(category);\r\n  return (\r\n    <>\r\n      <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n      {loading && (\r\n        <p className='animate__animated animate__flash'>Loading Data...</p>\r\n      )}\r\n      <div className='cardGrid'>\r\n        {/* <ol> */}\r\n        {Images.map((image) => {\r\n          return <GiphyGridItem key={image.id} {...image} />;\r\n        })}\r\n        {/* </ol> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\n\r\n/**\r\n * Helpers\r\n */\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const UseFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((img) => {\r\n      setState({\r\n        data: img,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\n/**\r\n * Components\r\n */\r\nimport { AddCategory } from \"./AddCategory\";\r\nimport { GiphyGrid } from \"./GiphyGrid\";\r\n\r\nexport const GiphyApp = () => {\r\n  const [category, setcategory] = useState([\"One Punch\"]);\r\n  return (\r\n    <>\r\n      <h2>GiphyApp</h2>\r\n      <hr />\r\n      <AddCategory setcategory={setcategory} />\r\n      {/* <ol> */}\r\n      {category.map((categoryItem) => {\r\n        return <GiphyGrid key={categoryItem} category={categoryItem} />;\r\n      })}\r\n      {/* </ol> */}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\n/**\n * Components\n */\nimport { GiphyApp } from \"./components/GiphyApp\";\n\nReactDOM.render(<GiphyApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}